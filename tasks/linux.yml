  - name: Stop Mythic
    ansible.builtin.command: "./mythic-cli stop"
    args:
      chdir: "/opt/mythic"
    become: yes

  - name: Remove existing Mythic installation
    ansible.builtin.file:
      path: "/opt/mythic"
      state: absent

  - name: Stop Mythic
    ansible.builtin.command: "docker system prune -a -f"
    become: yes

  - name: Clone Mythic repo
    ansible.builtin.git:
      repo: 'https://github.com/its-a-feature/Mythic'
      dest: /opt/mythic

  - name: Build Mythic
    community.general.make:
      chdir: /opt/mythic

  - name: Start Mythic
    ansible.builtin.command: "./mythic-cli start"
    args:
      chdir: "/opt/mythic"
    become: yes

  - name: Install HTTP
    ansible.builtin.command: "/opt/mythic/mythic-cli install github https://github.com/MythicC2Profiles/http -f"
    become: yes
    args:
      chdir: "/opt/mythic"

  - name: Install SMB
    ansible.builtin.command: "/opt/mythic/mythic-cli install github https://github.com/MythicC2Profiles/smb -f"
    become: yes
    args:
      chdir: "/opt/mythic"

  - name: Install TCP
    ansible.builtin.command: "/opt/mythic/mythic-cli install github https://github.com/MythicC2Profiles/tcp -f"
    become: yes
    args:
      chdir: "/opt/mythic"

  - name: Install WS
    ansible.builtin.command: "/opt/mythic/mythic-cli install github https://github.com/MythicC2Profiles/websocket -f"
    become: yes
    args:
      chdir: "/opt/mythic"

  # - name: Install Poseidon
  #   ansible.builtin.command: "/opt/mythic/mythic-cli install github https://github.com/MythicAgents/poseidon -f"
  #   become: yes
  #   args:
  #     chdir: "/opt/mythic"

  # - name: Install Apfell
  #   ansible.builtin.command: "/opt/mythic/mythic-cli install github https://github.com/MythicAgents/apfell -f"
  #   become: yes
  #   args:
  #     chdir: "/opt/mythic"

  # - name: Install Thanatos
  #   ansible.builtin.command: "/opt/mythic/mythic-cli install github https://github.com/MythicAgents/thanatos -f"
  #   become: yes
  #   args:
  #     chdir: "/opt/mythic"

  - name: Install Forge
    ansible.builtin.command: "/opt/mythic/mythic-cli install github https://github.com/MythicAgents/forge -f"
    become: yes
    args:
      chdir: "/opt/mythic"

  - name: Install Scarecrow Wrapper
    ansible.builtin.command: "/opt/mythic/mythic-cli install github https://github.com/MythicAgents/scarecrow_wrapper -f"
    become: yes
    args:
      chdir: "/opt/mythic"

  - name: Install Service Wrapper
    ansible.builtin.command: "/opt/mythic/mythic-cli install github https://github.com/MythicAgents/service_wrapper -f"
    become: yes
    args:
      chdir: "/opt/mythic"

  - name: Make Mythic available on VPN
    ansible.builtin.command: "./mythic-cli config set mythic_server_bind_localhost_only false"
    become: yes
    args:
      chdir: "/opt/mythic"

  - name: Restart Mythic
    ansible.builtin.command: "./mythic-cli restart"
    become: yes
    args:
      chdir: "/opt/mythic"

  - name: Get Mythic Admin Password
    ansible.builtin.command: "./mythic-cli config get MYTHIC_ADMIN_PASSWORD"
    args:
      chdir: "/opt/mythic"
    become: yes
    register: mythic_admin_pass

  - name: Output Mythic Password to User
    ansible.builtin.debug:
      msg: "{{ mythic_admin_pass.stdout }}"
